/* -*- mode: c -*- */
/* ********************************************************************** */
/* ap_linexprconsgen_types.h */
/* ********************************************************************** */

#ifndef _AP_LINEXPRCONSGEN_TYPES_H_
#define _AP_LINEXPRCONSGEN_TYPES_H_

#include "num_types.h"
#include "ap_dimension.h"
#include "ap_coeff.h"
#include "ap_environment.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Classification of expressions */
typedef enum ap_linexpr_type_t {
  AP_LINEXPR_INTLINEAR,
  AP_LINEXPR_QUASILINEAR,
  AP_LINEXPR_LINEAR
} ap_linexpr_type_t;

/* Datatype for type of constraints */
typedef enum ap_constyp_t {
  AP_CONS_EQ,    /* equality constraint */
  AP_CONS_SUPEQ, /* >= constraint */
  AP_CONS_SUP,   /* > constraint */
  AP_CONS_EQMOD, /* congruence equality constraint */
  AP_CONS_DISEQ  /* disequality constraint */
} ap_constyp_t;

/* Datatype for type of generators */
typedef enum ap_gentyp_t {
  AP_GEN_LINE,   /* Bidirectional ray (real coefficient) */
  AP_GEN_RAY,    /* Ray (positive real coefficient) */
  AP_GEN_VERTEX, /* Vertex ("barycenter" coefficient) */
  AP_GEN_LINEMOD,/* Bidirectionnal integer ray (integer coefficient) */
  AP_GEN_RAYMOD  /* Integer ray (positive integer coefficient) */
} ap_gentyp_t;


MACRO_ALLX

/* Interval linear term */
typedef struct ap_lintermXXX_struct {
  eitvXXX_t eitv;
  ap_dim_t dim;
} ap_lintermXXX_struct;
typedef ap_lintermXXX_struct* ap_lintermXXX_ptr;
typedef ap_lintermXXX_struct ap_lintermXXX_t[1];

/* Interval linear expression */
typedef struct ap_linexprXXX_struct {
  ap_lintermXXX_t* linterm;
  size_t size;
  eitvXXX_t cst;
} ap_linexprXXX_struct;
typedef ap_linexprXXX_struct ap_linexprXXX_t[1];
typedef ap_linexprXXX_struct* ap_linexprXXX_ptr;

/* Interval linear constraint */
typedef struct ap_linconsXXX_struct {
  ap_linexprXXX_t linexpr;
  ap_constyp_t constyp;
  mpq_t mpq;
} ap_linconsXXX_struct;
typedef ap_linconsXXX_struct ap_linconsXXX_t[1];
typedef ap_linconsXXX_struct* ap_linconsXXX_ptr;

/* Linear generator */
typedef struct ap_lingenXXX_struct {
  ap_linexprXXX_t linexpr;
  ap_gentyp_t gentyp;
} ap_lingenXXX_struct;
typedef ap_lingenXXX_struct ap_lingenXXX_t[1];
typedef ap_lingenXXX_struct* ap_lingenXXX_ptr;


/* Array of interval linear expressions */
typedef struct ap_linexprXXX_array_struct {
  ap_linexprXXX_t* p;
  size_t size;
} ap_linexprXXX_array_struct;
typedef ap_linexprXXX_array_struct ap_linexprXXX_array_t[1];
typedef ap_linexprXXX_array_struct* ap_linexprXXX_array_ptr;

/* Array of interval linear constraints */
typedef struct ap_linconsXXX_array_struct {
  ap_linconsXXX_t* p;
  size_t size;
} ap_linconsXXX_array_struct;
typedef ap_linconsXXX_array_struct ap_linconsXXX_array_t[1];
typedef ap_linconsXXX_array_struct* ap_linconsXXX_array_ptr;

/* Array of linear generators */
typedef struct ap_lingenXXX_array_struct {
  ap_lingenXXX_t* p;
  size_t size;
} ap_lingenXXX_array_struct;
typedef ap_lingenXXX_array_struct ap_lingenXXX_array_t[1];
typedef ap_lingenXXX_array_struct* ap_lingenXXX_array_ptr;

ENDMACRO

#ifdef __cplusplus
}
#endif

#endif
