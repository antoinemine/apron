/* -*- mode: c -*- */

/* This file is part of the APRON Library, released under LGPL license.
   Please read the COPYING file packaged in the distribution  */

quote(C, "#include \"apron_caml.h\"")

typedef [abstract,
	 ml2c(camlidl_apron_var_ptr_ml2c),
	 c2ml(camlidl_apron_var_ptr_c2ml)]
struct apron_var_ptr ap_var_t;

quote(MLMLI,"(** APRON Variables *)\n")

quote(MLI,"(** Constructor *)")
ap_var_t ap_var_of_string([string]char* name);

quote(MLI,"(** Comparison function *)")
int ap_var_compare(ap_var_t var1, ap_var_t var2);

quote(MLI,"(** Conversion to string *)")
[string]char* ap_var_to_string(ap_var_t var)
  quote(call,"_res = ((apron_var_ptr)var)->name;");

quote(MLI,"(** Hash function *)")
int ap_var_hash(ap_var_t var);

quote(MLI,"\n\
(** Printing function *)\n\
val print : Format.formatter -> t -> unit\n\
")
quote(ML,"\n\
let print fmt v = Format.pp_print_string fmt (to_string v)\n\
")

quote(MLMLI,"\n\
(** Initialisation of abstract type operations in C library *)\n\
external ap_var__set_operations : unit -> unit = \"camlidl_apron_var_set_operations\"");
quote(ML,"\n\
let _ = _set_operations ()\n\
")
