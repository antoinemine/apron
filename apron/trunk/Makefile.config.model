# -*- mode: makefile -*-

######################################################################
# HAS Flags
######################################################################

# If defined to non-empty value, generates dynamic libraries.
# Do not forget to add -fPIC to CFLAGS and CFLAGS_DEBUG
HAS_SHARED=1

# If defined to non-empty value, compiles the OCaml interface (bytecode)
HAS_OCAML = 1
# If defined to non-empty value, compiles the OCaml interface (native code)
HAS_OCAMLOPT = 1

# If defined to non-empty value, compiles the C++ interface (beta version)
# HAS_CPP = 1

# If defined to non-empty value, compiles the PPL domain
# (require included patch to PPL, see ppl/README and ppl/ppl.patch)

# HAS_PPL = 1

# If defined to non-empty value, support for "long double" is enabled

# HAS_LONG_DOUBLE = 1

# If defined to non-empty value, compiles the Java interface
# HAS_JAVA = 1

# If defined to non-empty value, assumed to be the right executable,
# use FINDLIB/ocamlfind package system
# (advised)
OCAMLFIND = ocamlfind

######################################################################
# Directories
######################################################################

# Where to install and to find APRON
# ($(APRON_PREFIX)/include, $(APRON_PREFIX)/lib)
#
APRON_PREFIX = /tmp

# Where to install and to find MLGMPIDL
# ($(MLGMPIDL_PREFIX)/lib)
# Only if you do not use FINDLIB
MLGMPIDL_PREFIX = /tmp

# Where to install Java .jar files
#
JAVA_PREFIX = /tmp

# Where to find GMP ($(GMP_PREFIX)/include, ($GMP_PREFIX)/lib
#
GMP_PREFIX = /usr

# Where to find MPFR ($(MPFR_PREFIX)/include, ($MPFR_PREFIX)/lib
#
MPFR_PREFIX = /usr

# Where to find PPL ($(PPL_PREFIX)/include, $(PPL_PREFIX)/lib
#
PPL_PREFIX = /usr

# Where to find OCAML ($(CAML_PREFIX)/bin, $(CAML_PREFIX)/lib/ocaml, ...)
#
CAML_PREFIX = `ocamlfind printconf stdlib`

# Where to find CAMLIDL
#
CAMLIDL_PREFIX = `ocamlfind query camlidl`

######################################################################
# Java binaries and directories
######################################################################

# Java launcher
JAVA      = java

# Java compiler
JAVAC     = javac -Xlint:unchecked

# Java header compiler
JAVAH     = javah

# Java documentation generator
JAVADOC   = javadoc

# Java archive tool
JAR       = jar

# preprocessing directives to find JNI headers
JNIINC    = -I/java/include

######################################################################
# Tools and Flags
######################################################################

# C compiler
#CC = gcc

# NOTE: for MACINTOSH (under MacOS 10.6), add in CFLAGS and their variants:
#
# -undefined supress -flat_namespace
#

# C compilation flags
CFLAGS = \
-Wcast-qual -Wswitch -Werror-implicit-function-declaration \
-Wall -Wextra -Wundef -Wbad-function-cast -Wcast-align -Wstrict-prototypes \
-Wno-unused -Wno-unused-parameter -Wno-unused-function \
-std=c99 -U__STRICT_ANSI__ \
-fPIC -O3 -DNDEBUG

# C compilation flags in debug (or profile) mode
CFLAGS_DEBUG = \
-Wcast-qual -Wswitch -Werror-implicit-function-declaration \
-Wall -Wextra -Wundef -Wbad-function-cast -Wcast-align -Wstrict-prototypes \
-Wno-unused -Wno-unused-parameter -Wno-unused-function \
-std=c99  -U__STRICT_ANSI__ \
-fPIC -g -O0 -UNDEBUG

# C compilation flags in profiling mode
CFLAGS_PROF = \
-Wcast-qual -Wswitch -Werror-implicit-function-declaration \
-Wall -Wextra -Wundef -Wbad-function-cast -Wcast-align -Wstrict-prototypes \
-Wno-unused -Wno-unused-parameter -Wno-unused-function \
-std=c99 \
-fPIC -O3 -DNDEBUG -g -pg

# Examples of CFLAGS
# CFLAGS = -Wswitch -Werror-implicit-function-declaration -Wall -std=c99	\
#	   -O3 -DNDEBUG \
#          -march=pentium-m -mtune=pentium-m -pipe -mmmx -msse -msse2 \
#	   -mfpmath=sse -ftracer -funit-at-a-time -funroll-loops -fmove-all-movables

# C++ compiler
#CXX = g++
# C++ compilation flags
CXXFLAGS = \
-Wcast-qual -Wswitch \
-Wall -Wextra -Wundef -Wcast-align \
-Wno-unused -Wno-unused-parameter -Wno-unused-function \
-fPIC -O3 -DNDEBUG
# C++ compilation flags in debug (or profile) mode
CXXFLAGS_DEBUG = \
-Wcast-qual -Wswitch \
-Wall -Wextra -Wundef -Wcast-align \
-Wno-unused -Wno-unused-parameter -Wno-unused-function \
-fPIC -g -O0 -UNDEBUG

AR = ar
RANLIB = ranlib
SED = sed
PERL = perl
INSTALL = install
INSTALLd = install -d

OCAMLC = ocamlc.opt
OCAMLOPT = ocamlopt.opt

# ocamlc compilation flags
OCAMLFLAGS = -g
# ocamlopt compilation flags
OCAMLOPTFLAGS = -inline 20

OCAMLDEP = ocamldep
OCAMLLEX = ocamllex
OCAMLYACC = ocamlyacc
OCAMLDOC = ocamldoc
OCAMLMKTOP = ocamlmktop
OCAMLMKLIB = ocamlmklib

CAMLIDL = camlidl

LATEX=latex
DVIPDF=dvipdf
MAKEINDEX=makeindex
TEXI2DVI=texi2dvi
TEXI2HTML=texi2html

OCAMLPACK = $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))/ocamlpack
