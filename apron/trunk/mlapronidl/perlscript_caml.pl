print "\n(* This file is part of the APRON Library, released under LGPL license with an exception allowing the redistribution of statically linked executables.\n   Please read the COPYING file packaged in the distribution *)\n";
while (<>) {
    s/mutable_/mutable /g;
    s/mpq_ptr/t/g;
    s/^and ap_scalar_ptr = ap_scalar_t//g;
    s/^and ap_scalar_array_t = ap_scalar_ptr array//g;
    s/ap_scalar_t/t/g;
    s/ap_scalar_ptr/t/g;
    s/Scalar.ap_scalar_array_t/Scalar.t array/g;
    s/^and ap_interval_ptr = ap_interval_t//g;
    s/^and ap_interval_array_t = ap_interval_ptr array//g;
    s/ap_interval_t/t/g;
    s/ap_interval_ptr/t/g;
    s/Interval.ap_interval_array_t/Interval.t array/g;
    s/ap_coeff_t/t/g;
    s/ap_dim_t/t/g;
    s/ap_dimchange_t/change/g;
    s/ap_dimchange2_t/change2/g;
    s/ap_dimperm_t/perm/g;
    s/ap_dimension_t/dimension/g;
    s/ap_linexpr0_ptr/t/g;
    s/external ap_linexpr0_/external /g;
    s/^and ap_lincons0_array_t = ap_lincons0_t array//g;
    s/ap_lincons0_t/t/g;
    s/ap_lincons0_array_t/t array/g;
    s/gentyp/typ/g;
    s/^and ap_generator0_array_t = ap_generator0_t array//g;
    s/ap_generator0_t/t/g;
    s/ap_generator0_array_t/t array/g;
    s/ap_texpr0_ptr/t/g;
    s/ap_texpr_unop_t/unop/g;
    s/ap_texpr_binop_t/binop/g;
    s/ap_texpr_rtype_t/typ/g;
    s/ap_texpr_rdir_t/round/g;
    s/external ap_texpr0_/external /g;
    s/^and ap_tcons0_array_t = ap_tcons0_t array//g;
    s/ap_tcons0_t/t/g;
    s/ap_tcons0_array_t/t array/g;
    s/tbool_t/tbool/g;
    s/ap_exc_t/exc/g;
    s/ap_funid_t/funid/g;
    s/ap_funopt_t/funopt/g;
    s/ ap_funopt_/ funopt_/g;
    s/ap_exclog_t/exclog/g;
    s/(([A-Z][a-z0-9]*[.])?)ap_manager_ptr/'a $1t/g;
    s/(([A-Z][a-z0-9]*[.])?)ap_manager_t/'a $1t/g;
    s/external ap_manager_/external /g;
    s/(([A-Z][a-z0-9]*[.])?)ap_abstract0_ptr/'a $1t/g;
    s/external ap_abstract0_/external /g;
    s/([^_])ap_var_/$1/g;
    s/ap_environment_ptr/t/g;
    s/external ap_environment_/external /g;
    s/AP_INT/INT/g;
    s/AP_REAL/REAL/g;
    s/ap_linexpr1_t/t/g;
    s/external ap_linexpr1_/external /g;
    s/ap_lincons1_t/t/g;
    s/ap_lincons1_array_t/earray/g;
    s/external ap_lincons1_/external /g;
    s/ap_generator1_t/t/g;
    s/ap_generator1_array_t/earray/g;
    s/external ap_generator1_/external /g;
    s/ap_texpr1_t([^a-zA-Z]|$)/t$1/g;
    s/external ap_texpr1_/external /g;
    s/ap_tcons1_t/t/g;
    s/ap_tcons1_array_t/earray/g;
    s/external ap_tcons1_/external /g;
    s/(([A-Z][a-z0-9]*[.])?)ap_abstract1_t([^a-zA-Z]|$)/'a $1t$3/g;
    s/external ap_abstract1_/external /g;
    s/and ap_policy_optr//g;
    s/(([A-Z][a-z0-9]*[.])?)ap_policy_manager_ptr/'a $1man/g;
    s/(([A-Z][a-z0-9]*[.])?)ap_policy_ptr/'a $1t/g;
    s/(([A-Z][a-z0-9]*[.])?)ap_policy_optr/'a $1t option/g;
    s/external ap_policy_/external /g;
    s/external policy_/external /g;
    s/ap_policy_mode_t/mode/g;
    s/ap_disjunction_manager_alloc : 'a Manager.t -> 'a Manager.t/manager_alloc : 'a Manager.t -> 'a t Manager.t/g;
    s/ap_disjunction_manager_decompose : 'a Manager.t -> 'a Manager.t/manager_decompose : 'a t Manager.t -> 'a Manager.t/g;
    s/ap_disjunction_to_lincons0_set : 'a Manager.t -> 'a Abstract0.t -> Lincons0.t array/to_lincons0_set : 'a t Manager.t -> 'a t Abstract0.t -> Lincons0.t array/g;
    s/ap_disjunction__decompose : 'a Manager.t -> 'a Abstract0.t -> 'a Abstract0.t array \* int/_decompose : 'a t Manager.t -> 'a t Abstract0.t -> 'a Abstract0.t array * int/g;
    s/ap_disjunction_compose : 'a Manager.t -> 'a Abstract0.t array -> 'a Abstract0.t/compose : 'a t Manager.t -> 'a Abstract0.t array -> 'a t Abstract0.t/g;
    print;
}
